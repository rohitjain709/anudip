# task 1 : Print the first 10 natural numbers using for loop

for num in range(1, 11):
    print(num)


# task 2 : Python program to check if the given string is a palindrome

def is_palindrome(string):

  # remove spaces and convert to lowercase 
  string = string.replace(" ", "").lower()

  # checking palindrome using slicing
  return string == string[::-1]

# Taking input from user
user_input_string = input("Enter a string: ")

# Checking wether string is a palindrome or not
if is_palindrome(user_input_string):
  print("Is a palindrome.")
else:
  print("Is not a palindrome.")



# task 3 : Python program to check if a given number is an Armstrong number


def is_armstrong_number(num):

  order = len(str(num))
  sum = 0

  #  iterating number string over its digits
  temp = str(num)

  for digit in temp:
    sum += int(digit) ** order

  return sum == num

# Taking input from  user
number = int(input("Enter a number: "))

# Check if the number is an Armstrong number or not
if is_armstrong_number(number):
  print(number, "is an Armstrong number")
else:
  print(number, "is not an Armstrong number")



# task 4 : Python program to get the Fibonacci series between 0 to 50

def fibonacci_series(n):

  if n <= 0:
    return []

  fib_series = [0, 1]
  if n <= 2:
    return fib_series[:n]

  for i in range(2, n):
    next_num = fib_series[i - 1] + fib_series[i - 2]
    fib_series.append(next_num)

  return fib_series

# Taking input from user
num_terms = int(input("Enter the number of terms: "))

# printing the Fibonacci series
result = fibonacci_series(num_terms)
print(result)


# task 5: Python program to check the validity of password input by users


import string

def is_valid_password(password):

  # length of password must be between 8 and 12 char
  if len(password) < 8 or len(password) > 12:
    return False

  # Flags to check for different character types
  is_upper = False
  is_lower = False
  is_digit = False
  is_special = False

  # Checking each character in the password
  for char in password:
    if char.isupper():
      is_upper = True
    elif char.islower():
      is_lower = True
    elif char.isdigit():
      is_digit = True
    elif char in string.punctuation:
      is_special = True

  # Checking if all character types are present
  return has_upper and has_lower and has_digit and has_special

while True:
  password = input("Enter a password: ")
  if is_valid_password(password):
    print("Valid password")
    break
  else:
    print("Invalid password. Please follow the criteria:")
    print("- Length between 8 and 12 characters")
    print("- At least one uppercase letter")
    print("- At least one lowercase letter")
    print("- At least one digit")
    print("- At least one special character")